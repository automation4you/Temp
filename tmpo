foreach ($entry in $vmTags) {
    $vmName = $entry.'Computer Name'.Trim()
    $subscriptionId = $entry.Subscription.Trim()
    $category = $entry.'Backup Tag Name'.Trim()
    $value = $entry.'Backup Tag Value'.Trim()

    try {
        # Try setting the Azure context
        Set-AzContext -SubscriptionId $subscriptionId -ErrorAction Stop | Out-Null
    } catch {
        Write-Warning "Subscription '$subscriptionId' does not exist or you don't have access. Skipping VM '$vmName'."
        $failureList += "$vmName (Invalid Subscription: $subscriptionId)"
        continue  # Skip to the next VM
    }

    try {
        # Get VM
        $vm = Get-AzVM -Name $vmName -ErrorAction SilentlyContinue

        if ($null -eq $vm) {
            Write-Warning "VM '$vmName' not found in subscription '$subscriptionId'. Skipping."
            $failureList += $vmName
            continue
        }

        # Ensure tags exist
        if ($null -eq $vm.Tags) { $vm.Tags = @{} }

        # Check if the tag is already set correctly
        if ($vm.Tags[$category] -eq $value) {
            Write-Host "Tag '$category' already set to '$value' for VM '$vmName'. Skipping update." -ForegroundColor Cyan
            $successList += $vmName
            continue
        }

        # Update the tag
        $tag = @{ $category = $value }
        Update-AzTag -ResourceId $vm.Id -Tag $tag -Operation Merge -WhatIf
        Write-Host "Added/Updated tag '$category=$value' for VM '$vmName'." -ForegroundColor Green
        $successList += $vmName
    } catch {
        Write-Error "Failed to update tags for VM '$vmName' in subscription '$subscriptionId': $($_.Exception.Message)"
        $failureList += $vmName
    }
}
